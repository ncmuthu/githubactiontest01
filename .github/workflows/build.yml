name: build
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
env:
  BUILD_NAME: usgeditor
  BUILD_AB: 'false'
  BUILD_WIN_AB: 'false'
  BUILD_IOS_AB: 'false'
  BUILD_ANDROID_AB: 'false'
  BUILD_ALL_AB: 'false'
  TEST_WIN: 'false'
  TEST_ANDROID: 'false'
  TEST_IOS: 'false'
  TEST_LAUNCHERS: 'false'
  UNITY_VERSION: 2020.3.15f2
  UNITY_ACTIVATION_FILE: "./unity3d.alf"
  IMAGE: unityci/editor
  IMAGE_VERSION: 1
  UNITY_DIR: "${{ github.workspace }}/USGEditor"
  VERSION_NUMBER_VAR: "${{ github.ref }}-${{ github.repository}}/${{ github.workflow }}-${{ github.job }}"
  VERSION_BUILD_VAR: "${{ github.workflow }}"
jobs:
  set-container-image-name:
    # This job needed because container block does not support image name definition with env
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    steps:
    - id: set_image
      run: 
        echo "image=${{ env.IMAGE }}:${{ env.UNITY_VERSION }}-windows-mono-${{ env.IMAGE_VERSION}}" >> $GITHUB_OUTPUT
  build-assetbundle-StandaloneWindows64mono:
    runs-on: ubuntu-latest
    needs: set-container-image-name
    container: 
      image: ${{ needs.set-container-image-name.outputs.image }}
    timeout-minutes: 60
    env:
      BUILD_TARGET: StandaloneWindows64
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.BUILD_AB == 'true' || env.BUILD_WIN_AB == 'true'
      with:
        fetch-depth: 20
        lfs: true
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_assetbundle.sh && ./ci/build_assetbundle.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsAssetbundle/"
  build-assetbundle-Android:
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-android-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: Android
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.BUILD_AB == 'true' || env.BUILD_ANDROID_AB == 'true'    
      with:
        fetch-depth: 20
        lfs: true
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_assetbundle.sh && ./ci/build_assetbundle.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsAssetbundle/"
  build-assetbundle-iOS:
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-ios-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: iOS
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.BUILD_AB == 'true' || env.BUILD_IOS_AB == 'true'  
      with:
        fetch-depth: 20
        lfs: true
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_assetbundle.sh && ./ci/build_assetbundle.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsAssetbundle/"
  build-assetbundle-win-android-ios:
    runs-on: ubuntu-latest
    container:
      image: testwangwei/goodgame:2020.3.15f2-win-android-ios-editor
    timeout-minutes: 60
    env:
      BUILD_TARGET: All
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.BUILD_AB == 'true' || env.BUILD_ALL_AB == 'true'    
      with:
        fetch-depth: 20
        lfs: true
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_assetbundle.sh && ./ci/build_assetbundle.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsAssetbundle/"
  build-launch-StandaloneWindows64mono:
    needs:
    - build-assetbundle-StandaloneWindows64mono
    - build-assetbundle-Android
    - build-assetbundle-iOS
    - build-assetbundle-win-android-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-windows-mono-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: StandaloneWindows64
    steps:
    - uses: actions/checkout@v3.5.0
      if: github.event_type == 'pull_request'    
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_launch.sh && ./ci/build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsLaunch/"
  build-launch-android:
    needs:
    - build-assetbundle-StandaloneWindows64mono
    - build-assetbundle-Android
    - build-assetbundle-iOS
    - build-assetbundle-win-android-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-android-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: Android
    steps:
    - uses: actions/checkout@v3.5.0
      if: github.event_type == 'pull_request'    
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_launch.sh && ./ci/build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsLaunch/"
  build-launch-ios:
    needs:
    - build-assetbundle-StandaloneWindows64mono
    - build-assetbundle-Android
    - build-assetbundle-iOS
    - build-assetbundle-win-android-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-ios-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: iOS
    steps:
    - uses: actions/checkout@v3.5.0
      if: github.event_type == 'pull_request'
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/build_launch.sh && ./ci/build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/BuildsLaunch/"
  test-build-launch-StandaloneWindows64mono:
    needs:
    - build-launch-StandaloneWindows64mono
    - build-launch-android
    - build-launch-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-windows-mono-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: StandaloneWindows64
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.TEST_WIN == 'true' || env.TEST_LAUNCHERS == 'true'    
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/test_build_launch.sh && ./ci/test_build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/TestBuildsLaunch/"
  test-build-launch-android:
    needs:
    - build-launch-StandaloneWindows64mono
    - build-launch-android
    - build-launch-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-android-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: Android
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.TEST_ANDROID == 'true' || env.TEST_LAUNCHERS == 'true'    
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/test_build_launch.sh && ./ci/test_build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/TestBuildsLaunch/"
  test-build-launch-ios:
    needs:
    - build-launch-StandaloneWindows64mono
    - build-launch-android
    - build-launch-ios
    runs-on: ubuntu-latest
    container:
      image: "$IMAGE:$UNITY_VERSION-ios-$IMAGE_VERSION"
    timeout-minutes: 60
    env:
      BUILD_TARGET: iOS
    steps:
    - uses: actions/checkout@v3.5.0
      if: env.TEST_IOS == 'true' || env.TEST_LAUNCHERS == 'true'    
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v3.0.1
    - run: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
    - run: chmod +x ./ci/test_build_launch.sh && ./ci/test_build_launch.sh
    - uses: actions/upload-artifact@v3.1.1
      if: success()
      with:
        name: "${{ github.job }}"
        path: "$UNITY_DIR/TestBuildsLaunch/"
